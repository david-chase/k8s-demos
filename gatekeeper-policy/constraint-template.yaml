# This file was generated by claude.ai
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srequiredresources
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredResources
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequiredresources

        # Fail if this is a Deployment and it has no container requests section
        violation[{"msg": msg}] {
          input.review.kind.kind == "Deployment"
          container := input.review.object.spec.template.spec.containers[_]
          not container.resources.requests
          msg := sprintf("Container '%v' is missing resource requests", [container.name])
        }

        # Fail if this is a Deployment and it has no container limits section
        violation[{"msg": msg}] {
          input.review.kind.kind == "Deployment"
          container := input.review.object.spec.template.spec.containers[_]
          not container.resources.limits
          msg := sprintf("Container '%v' is missing resource limits", [container.name])
        }

        # Fail if this is a Deployment and it has no container CPU requests section
        violation[{"msg": msg}] {
          input.review.kind.kind == "Deployment"
          container := input.review.object.spec.template.spec.containers[_]
          resources := container.resources
          not resources.requests.cpu
          msg := sprintf("Container '%v' is missing CPU request", [container.name])
        }

        # Fail if this is a Deployment and it has no container Memory requests section
        violation[{"msg": msg}] {
          input.review.kind.kind == "Deployment"
          container := input.review.object.spec.template.spec.containers[_]
          resources := container.resources
          not resources.requests.memory
          msg := sprintf("Container '%v' is missing memory request", [container.name])
        }

        # Fail if this is a Deployment and it has no container CPU limits section
        violation[{"msg": msg}] {
          input.review.kind.kind == "Deployment"
          container := input.review.object.spec.template.spec.containers[_]
          resources := container.resources
          not resources.limits.cpu
          msg := sprintf("Container '%v' is missing CPU limit", [container.name])
        }

        # Fail if this is a Deployment and it has no container memory limits section
        violation[{"msg": msg}] {
          input.review.kind.kind == "Deployment"
          container := input.review.object.spec.template.spec.containers[_]
          resources := container.resources
          not resources.limits.memory
          msg := sprintf("Container '%v' is missing memory limit", [container.name])
        }